# Rust CI

on: [push, pull_request]

name: Rust CI

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rust-src

      - name: devkitPPC cache
        id: cache-1
        uses: actions/cache@v2
        with:
          path: cache
          key: ${{ runner.os }}-cache-1

      - name: Download devkitPPC and wut-tools
        if: steps.cache-1.outputs.cache-hit != 'true'
        run: |
          mkdir cache && cd cache
          wget "https://wii.leseratte10.de/devkitPro/devkitPPC/r39%20(2021-05-25)/devkitPPC-r39-2-linux_x86_64.pkg.tar.xz"
          wget "https://wii.leseratte10.de/devkitPro/other-stuff/wut-tools/wut-tools-1.3.0-3-linux_x86_64.pkg.tar.xz"
          cd ..

      - name: Unpack devkitPPC and wut-tools
        run: |
          tar -C /opt --exclude=".*" -xvf $(pwd)/cache/devkitPPC-* --strip-components=1
          tar -C /opt --exclude=".*" -xvf $(pwd)/cache/wut-tools-* --strip-components=1

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: build

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy, rust-src

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
